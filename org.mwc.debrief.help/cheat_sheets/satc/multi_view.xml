<?xml version="1.0" encoding="UTF-8"?>
<cheatsheet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="../contentFile.xsd"
 title="Grooming the data">
   <intro>
      <description>
         Let&apos;s understand the data we&apos;ve got, before we start playing with it
      </description>
   </intro>
   <item
      title="View the ownship track">
      <description>         
         When you view the tutorial plot you will see an ownship track.  Use the Debrief <b>Time Controller</b> and <b>Track Tote</b> to 
         familiarise yourself with the general motion of the <b>OWNSHIP</b> track.  You&apos;ll see that the vessel starts in the 
         North-East of the area, then travels quite slowly at 2.5 knots, with two straight legs.
      </description>
   </item>
   <item href="/org.mwc.debrief.help/html/legacy/satc.html#satc_intro"
      title="Create the scenario">
      <description>
         The most significant block of information in generating a solution is the bearing data.  So, the 
         first step is to provide the bearing data.  We are going to use all of the Ownship sensor data for this
         solution, so right-click on the <b>Sensor:Plain (145 items)</b> sensor, and select <b>Semi Auto TMA</b> / 
         <b>Create new scenario from these cuts</b>.
         <br/>As with the previous tutorial, you will see the new scenario (called <b>121200.00</b> appear in the Outline View, and the 
         <b>Maintain Contributions</b> view will open. 
         <br/>You will also see that the <b>Maintain Contributions</b> view contains just the one contribution.
      </description>
   </item>
   <item
      title="Rename the scenario">
      <description>         
         To make it easier to navigate the data, please use the <b>Properties</b> view to rename 
         the new scenario (<b>121200.00</b>) to <b>Tutorial Scenario</b>
      </description>
   </item>
   <item
      title="Generate the target legs">
      <description>
      	 SATC&apos;s Manoeuvre Detection Aid is capable of detecting (well, guessing) if a target zigs
      	 during an ownship straight leg.
      	 <br/>
      	 The first step in the process is determining ownship legs. It&apos;s quite easy for the human eye,
      	 but less so for the PC.  Let&apos;s have a go.  The main information source for zig detection
      	 is the bearing data.  So, expand the <b>Bearing Measurement</b> element in the the Maintain
      	 Contributions view. Near the bottom of the control you&apos;ll see the <b>MDA</b> section.
      	 <br/>
      	 Click on <b>1. Slice O/S legs</b> to slice the ownship legs.  Have a look at the <b>Target Legs</b>
      	 graph at the bottom of the screen to judge its effectiveness. 
      	 <br/>
      	 For this dataset the algorithm thinks there is just one target leg. Clearly that is mistaken, 
      	 the ownship turns and speed changes are just too subtle.  Now change the SATC precision value to <b>Medium</b> 
      	 or <b>High</b> using the
      	 drop-down list at the top of the <b>Maintain Contributions</b> view and run <b>1. Slice O/S legs again</b>.
      	 <br/>
      	 To my untrained eye the <b>Medium</b> precision gave the best result.
      	 <br/>
      	 Once you are happy with the ownship legs, click on <b>2. Slice Tgt legs</b>.  The MDA algorithm
      	 will now run, and produce a series of legs for you. On my machine the algorithm produces
      	 four target legs. 
      </description>
   </item>
   <item
      title="Try to generate a solution">
      <description>         
         Hey, why not try to generate a solution.  Just click on <b>Calculate Solution</b> at the top of the
         <b>Maintain Contributions</b> view.  
         You will see Debrief do a couple of seconds of processing, and then stop.
         <br/>
         Can&apos;t you see the solution? Try hiding the <b>OWNSHIP</b> sensor data - 
         switch it off.
         <br/>
         Still can&apos;t see it?  Oh, this
          is because Debrief doesn&apos;t have enough information to generate a solution.  It needs to know
         one or more straight legs.  But, leave the <b>OWNSHIP</b> sensor data hidden, for when we do have some data.
      </description>
   </item>
</cheatsheet>
